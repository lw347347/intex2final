{"version":3,"sources":["context.js","header-container.js","left-container.js","right-container.js","footer-container.js","home.js","campaignCard.js","searchResults.js","search.js","calc.js","sortBy.js","campaignDetails.js","predictionResults.js","App.js","context-provider.js","serviceWorker.js","index.js"],"names":["AppContext","React","createContext","HeaderContainer","props","expand","to","Brand","class","Toggle","aria-controls","Collapse","id","className","title","alignRight","Item","Divider","href","LeftContainer","useContext","RightContainer","FooterContainer","Date","getFullYear","Home","fluid","ProductCard","sortBy","campaign","current_amount","campaign_id","style","right","top","opacity","Img","variant","alt","src","campaign_image_url","Header","Title","Text","SearchResults","SearchController","context","location","useLocation","campaignsArray","Object","values","campaigns","results","useEffect","console","log","state","detail","apiResults","item","itemInner","push","rows","i","length","slice","key","md","pathname","map","row","row_idx","Search","history","useHistory","initialValues","category","goal","donators","days_active","days_created","validateOnChange","validateOnBlur","onSubmit","actions","a","axios","get","params","has_beneficiary","user_id","campaign_hearts","social_share_total","location_city","location_country","is_charity","charity_valid","charity_npo_id","charity_name","does_not_have_beneficiary","is_not_charity","charity_not_valid","current_amount_less_than","goal_less_than","donators_less_than","days_active_less_than","campaign_hearts_less_than","social_share_total_less_than","resp","data","search","form","PaymentForm","disabled","isSubmitting","textAlign","name","type","size","animation","Input","rProps","Group","Label","Control","placeholder","field","meta","touched","error","GreaterThan","MyCheckbox","children","useField","PredicitonCalc","description","has_benificiary","visable_in_search","description_Language","validate","errors","description_language","is_individual","CalcForm","component","value","sort","b","parseFloat","avg_donation_per_donor","percent_goal_complete","overall_popularity","CampaignDetails","useParams","myCamp","isFound","App","noGutters","path","AppProvider","addToCart","removeFromCart","clearCart","getCartTotal","Provider","this","setState","Component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ffc747ea.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst AppContext = React.createContext()\nexport default AppContext\n","import React from 'react'\nimport * as bs from 'react-bootstrap'\nimport { Link } from \"react-router-dom\"\n\nfunction HeaderContainer(props) {\n\n    return (\n        <bs.Navbar expand=\"lg\">\n            <Link to=\"/\">\n                <bs.Navbar.Brand>\n                    <i class=\"fas fa-hand-holding-usd\"></i>\n                </bs.Navbar.Brand>\n            </Link>\n            <bs.Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <bs.Navbar.Collapse id=\"basic-navbar-nav\">\n                <bs.Nav className=\"mr-auto\">\n                    <Link to=\"/\" className=\"nav-link\">Home</Link>\n                    <Link to=\"/search\" className=\"nav-link\">Search</Link>\n                    <Link to=\"/calc\" className=\"nav-link\">Prediction Calculator</Link>\n                </bs.Nav>\n                <bs.Nav>\n                    <bs.NavDropdown title=\"Welcome, Kevin\" alignRight>\n                        <bs.NavDropdown.Item>My Account</bs.NavDropdown.Item>\n                        <bs.NavDropdown.Divider />\n                        <bs.NavDropdown.Item href=\"#action/3.4\">Logout</bs.NavDropdown.Item>\n                    </bs.NavDropdown>\n                </bs.Nav>\n            </bs.Navbar.Collapse>\n        </bs.Navbar>\n    )\n}\nexport default HeaderContainer\n","import React from 'react'\nimport * as bs from 'react-bootstrap'\nimport AppContext from './context'\nimport { Link } from \"react-router-dom\"\n\n\nfunction LeftContainer(props) {\n    const context = React.useContext(AppContext)   \n\n    return (\n        <bs.Nav className=\"flex-column\">\n            <Link\n                to={`/`}\n                className=\"nav-link\"\n            >\n                    \n            </Link>\n            <bs.Nav.Item>\n            </bs.Nav.Item>\n        </bs.Nav>\n    )\n}\nexport default LeftContainer\n","import React from 'react'\n\n\nfunction RightContainer(props) {\n    return (\n        <>\n        </>\n    )\n}\nexport default RightContainer\n","import React from 'react'\n\n\nfunction FooterContainer(props) {\n    return (\n        <div className=\"text-center\">\n            The GoFundMe Project  &copy; {new Date().getFullYear()}\n        </div>\n    )\n}\nexport default FooterContainer\n","import React from 'react'\nimport * as bs from 'react-bootstrap'\n\nfunction Home(props) {\n    return (\n        <bs.Container fluid>\n            <bs.Row>\n                <bs.Col>\n                    <h1 className=\"mt-3\">\n                        Welcome\n                    </h1>\n                </bs.Col>\n            </bs.Row>\n        </bs.Container>\n    )\n}\nexport default Home\n","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nfunction ProductCard(props) {\r\n    var sortBy;\r\n    if (props.sortBy === 'current_amount') {\r\n        sortBy = '$' + props.campaign.current_amount;\r\n    } else if (props.sortBy) {\r\n        sortBy = props.campaign[props.sortBy];\r\n    } else {\r\n        sortBy = '$' + props.campaign.current_amount;\r\n    }\r\n    \r\n    return (\r\n        <bs.Card className=\"mx-2 my-4\">\r\n            <Link\r\n                to={`/campaigns/${props.campaign.campaign_id}`}\r\n                className=\"btn btn-sm btn-dark position-absolute px-2 py-1 rounded shadow\"\r\n                style={{\r\n                    right: \"5px\",\r\n                    top: \"5px\",\r\n                    opacity: \"90%\",\r\n                }}\r\n            >\r\n                Details\r\n            </Link>\r\n            <bs.Card.Img\r\n                variant=\"top\"\r\n                alt={props.campaign.title}\r\n                src={props.campaign.campaign_image_url}\r\n                className=\"p-2\"\r\n            />\r\n            <bs.Card.Header className=\"border-top text-center\">\r\n                <bs.Card.Title className=\"mb-2\">{props.campaign.title}</bs.Card.Title>\r\n                <bs.Card.Text>{sortBy}</bs.Card.Text>\r\n            </bs.Card.Header>\r\n        </bs.Card>\r\n    )\r\n}\r\nexport default ProductCard\r\n","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport AppContext from './context'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { useEffect } from 'react'\r\nimport CampaignCard from './campaignCard'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst NUM_COLUMNS = 4\r\n\r\nfunction SearchResults(props) {\r\n    return (\r\n        <bs.Container>\r\n            <SearchController />\r\n        </bs.Container>\r\n    )\r\n}\r\nexport default SearchResults\r\n\r\n\r\nconst SearchController = props => {\r\n    const context = React.useContext(AppContext)\r\n    const location = useLocation();\r\n\r\n    let campaignsArray = Object.values(context.campaigns)\r\n\r\n    var results = []\r\n\r\n    useEffect(() => {\r\n        console.log(location.state.detail)\r\n        results = location.state.detail;        \r\n    })\r\n\r\n    // Get the search results from the api\r\n    var apiResults = (location.state.detail)\r\n\r\n    // Filter the results to the correct campaigns\r\n    for (var item of apiResults) {\r\n        for (var itemInner of campaignsArray) {\r\n            if (item.campaign_id === itemInner.campaign_id) {\r\n                // Push it to the array\r\n                results.push(itemInner);\r\n            }\r\n        }\r\n    }\r\n\r\n    // slice the products into an array of arrays (e.g. a list of rows of 4 products each)\r\n    const rows = []\r\n    for (let i = 0; i < results.length; i += NUM_COLUMNS) {\r\n        rows.push(results.slice(i, i + NUM_COLUMNS))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <bs.Row key='sortBy'>\r\n            <bs.Col md=\"2\">\r\n                <Link\r\n                    to={{\r\n                        pathname: `/sortBy`,\r\n                        state: {\r\n                            sortBy: 'avg_donation_per_donor',\r\n                            detail: results\r\n                        }\r\n                    }}\r\n                    className=\"nav-link\"\r\n                >\r\n                    Average donation per donor\r\n                </Link>\r\n            </bs.Col>\r\n            <bs.Col md=\"2\">\r\n                <Link\r\n                    to={{\r\n                        pathname: `/sortBy`,\r\n                        state: {\r\n                            sortBy: 'percent_goal_complete',\r\n                            detail: results\r\n                        }\r\n                    }}\r\n                >\r\n                    Percent of goal complete\r\n                </Link>\r\n            </bs.Col>\r\n            <bs.Col md=\"2\">\r\n                <Link\r\n                    to={{\r\n                        pathname: `/sortBy`,\r\n                        state: {\r\n                            sortBy: 'current_amount',\r\n                            detail: results\r\n                        }\r\n                    }}\r\n                >\r\n                    Total amount raised\r\n                </Link>\r\n            </bs.Col>  \r\n            <bs.Col md=\"2\">\r\n                <Link\r\n                    to={{\r\n                        pathname: `/sortBy`,\r\n                        state: {\r\n                            sortBy: 'campaign_hearts',\r\n                            detail: results\r\n                        }\r\n                    }}\r\n                >\r\n                    Campaign hearts\r\n                </Link>\r\n            </bs.Col>  \r\n            <bs.Col md=\"2\">\r\n                <Link\r\n                    to={{\r\n                        pathname: `/sortBy`,\r\n                        state: {\r\n                            sortBy: 'social_share_total',\r\n                            detail: results\r\n                        }\r\n                    }}\r\n                >\r\n                    Social share total\r\n                </Link>\r\n            </bs.Col>\r\n            <bs.Col md=\"2\">\r\n                <Link\r\n                    to={{\r\n                        pathname: `/sortBy`,\r\n                        state: {\r\n                            sortBy: 'overall_popularity',\r\n                            detail: results\r\n                        }\r\n                    }}\r\n                >\r\n                    Overall Popularity\r\n                </Link>\r\n            </bs.Col>\r\n        </bs.Row>\r\n            {rows.map((row, row_idx) => (\r\n            <bs.Row key={row_idx}>\r\n                {row.map(campaign => (\r\n                    <bs.Col md=\"3\" key={campaign.campaign_id}>\r\n                        <CampaignCard campaign={campaign} />\r\n                    </bs.Col>\r\n                ))}\r\n            </bs.Row>\r\n            ))}\r\n        </div>        \r\n    )\r\n}","import React from 'react'\nimport * as bs from 'react-bootstrap'\nimport { Formik, Form, Field, useField} from 'formik'\nimport AppContext from './context'\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\nimport SearchResults from './searchResults'\n\n\n\n// function Checkout(props) {\n//     // we'll add Stripe's Elements component here later\n//     return (\n//         <Elements stripe={stripePromise}>\n//             <CheckoutController />\n//         </Elements>\n        \n//     )\n// }\n// export default Checkout\n\nfunction Search(props) {\n    \n    return (\n        <bs.Container>\n            <SearchController />\n        </bs.Container>\n    )\n}\nexport default Search\n\n\nconst SearchController = props => {\n    const context = React.useContext(AppContext)\n    const history = useHistory()    \n\n    return (\n        <Formik\n            initialValues={{\n                campaign_id: '',\n                category: '',\n                current_amount: '',\n                goal: '',\n                donators: '',\n                days_active: '',\n                days_created: '',\n                title: '',\n                current_amount: '',\n                has_beneficiary: false,\n                does_not_have_beneficiary: false,\n                user_id: '',\n                created_at: '',\n                launch_date: '',\n                campaign_hearts: '',\n                social_share_total: '',\n                social_share_last_update: '',\n                location_city: '',\n                location_country: '',\n                is_charity: false,\n                is_not_charity: false,\n                charity_valid: false,\n                charity_not_valid: false,\n                charity_npo_id: '',\n                charity_name: '',\n            }}\n            validateOnChange={false}\n            validateOnBlur={false}\n            // validate={values => {\n            //     const errors = {}\n            //     //console.log('validating', values)\n            //     if (!values.name){\n            //         errors.name = \"Please enter your name\"\n            //     }\n            //     if (!values.address1){\n            //         errors.address1 = \"Please enter your address\"\n            //     }\n            //     if (!values.city){\n            //         errors.city = \"Please enter your city\"\n            //     }\n            //     if (!values.state){\n            //         errors.state = \"Please enter your state\"\n            //     }\n            //     if (!values.zipcode){\n            //         errors.zipcode = \"Please enter your zipcode\"\n            //     }\n\n            //     return errors\n            // }}\n            onSubmit={async (values, actions) => {\n                console.log('submit', values)\n                const resp = await axios.get('http://ec2-52-201-219-100.compute-1.amazonaws.com/api/campaignSearch/', {\n                    params: {\n                        campaign_id: values.campaign_id,\n                        category: values.category,\n                        current_amount: values.current_amount,\n                        goal: values.goal,\n                        donators: values.donators,\n                        days_active: values.days_active,\n                        title: values.title,\n                        current_amount: values.current_amount,\n                        has_beneficiary: values.has_beneficiary,\n                        user_id: values.user_id,\n                        campaign_hearts: values.campaign_hearts,\n                        social_share_total: values.social_share_total,\n                        location_city: values.location_city,\n                        location_country: values.location_country,\n                        is_charity: values.is_charity,\n                        charity_valid: values.charity_valid,\n                        charity_npo_id: values.charity_npo_id,\n                        charity_name: values.charity_name,\n                        does_not_have_beneficiary: values.does_not_have_beneficiary,\n                        is_not_charity: values.is_not_charity,\n                        charity_not_valid: values.charity_not_valid,\n                        current_amount_less_than: values.current_amount_less_than,\n                        goal_less_than: values.goal_less_than,\n                        donators_less_than: values.donators_less_than,\n                        days_active_less_than: values.days_active_less_than,\n                        campaign_hearts_less_than: values.campaign_hearts_less_than,\n                        social_share_total_less_than: values.social_share_total_less_than\n                    }                    \n                })\n                console.log(resp.data)\n                history.push({\n                    pathname: \"/searchResults\",\n                    search: \"\",\n                    state: {detail: resp.data}\n                })\n                return (<SearchResults values={values} actions={actions}/>)\n            }}\n        >{form => (\n            <PaymentForm form={form}/>\n        )}</Formik>\n    )\n}\n\n\n/**\n * The form layout/html.\n * This component needs finishing.\n */\n\nconst PaymentForm = props => (\n      <Form disabled={props.form.isSubmitting}>\n        <h1 style={{textAlign: 'center'}}>Welcome to Search</h1>\n        <bs.Row>\n            <bs.Col>\n                <Input disabled={props.form.isSubmitting} title=\"Campaign ID\" name=\"campaign_id\" type=\"text\" />\n                <Input disabled={props.form.isSubmitting} title=\"Category\" name=\"category\" type=\"text\" />\n                <GreaterThan disabled={props.form.isSubmitting} title=\"Current Amount\" name=\"current_amount\" type=\"number\" />\n                <GreaterThan disabled={props.form.isSubmitting} title=\"Goal\" name=\"goal\" type=\"number\" />\n                <GreaterThan disabled={props.form.isSubmitting} title=\"Number of Donators\" name=\"donators\" type=\"number\" />\n                <GreaterThan disabled={props.form.isSubmitting} title=\"Number of Days Active\" name=\"days_active\" type=\"number\" />\n                <Input disabled={props.form.isSubmitting} title=\"Campaign Title\" name=\"title\" type=\"text\" />\n                <Input disabled={props.form.isSubmitting} title=\"User ID\" name=\"user_id\" type=\"text\" />\n            </bs.Col>\n            <bs.Col>\n                <GreaterThan disabled={props.form.isSubmitting} title=\"Number of Campaign Hearts\" name=\"campaign_hearts\" type=\"number\" />\n                <GreaterThan disabled={props.form.isSubmitting} title=\"Total Number of Shares\" name=\"social_share_total\" type=\"number\" />\n                <Input disabled={props.form.isSubmitting} title=\"City\" name=\"location_city\" type=\"text\" />\n                <Input disabled={props.form.isSubmitting} title=\"Country\" name=\"location_country\" type=\"text\" />\n                Has beneficiary?\n                <MyCheckbox disabled={props.form.isSubmitting} title=\"Has Beneficiary\" name=\"has_beneficiary\" /><br></br>\n                Does not have beneficiary?\n                <MyCheckbox disabled={props.form.isSubmitting} title=\"Does not have Beneficiary\" name=\"does_not_have_beneficiary\" /><br></br>\n                Is a charity?\n                <MyCheckbox disabled={props.form.isSubmitting} title=\"Is A Charity\" name=\"is_charity\" /><br></br>\n                Is not a charity?\n                <MyCheckbox disabled={props.form.isSubmitting} title=\"Is not a charity\" name=\"is_not_charity\" /><br></br>\n                Charity is valid?\n                <MyCheckbox disabled={props.form.isSubmitting} title=\"Charity is valid\" name=\"charity_valid\" /><br></br>\n                Charity is not valid?\n                <MyCheckbox disabled={props.form.isSubmitting} title=\"Charity is not valid\" name=\"charity_not_valid\" />\n                <Input disabled={props.form.isSubmitting} title=\"NPO ID\" name=\"charity_npo_id\" type=\"text\" />\n                <Input disabled={props.form.isSubmitting} title=\"Charity Name\" name=\"charity_name\" type=\"text\" />\n                <bs.Button\n                            variant=\"success\"\n                            type=\"submit\"\n                            className=\"d-inline-flex align-items-center\"\n                            disabled={props.form.isSubmitting}\n                        >\n                            {props.form.isSubmitting &&\n                                <bs.Spinner className=\"mr-2\" size=\"sm\" animation=\"border\" />\n                            }\n                            Search\n                        </bs.Button>\n                </bs.Col>\n        </bs.Row>\n    </Form>  \n)\n\n\n/**\n * A form input.\n *   props.title - the title that shows above the input box\n *   props.type - the type of input (see React Bootstrap Form.Control)\n *   props.placeholder - placeholder text in the input.\n * This component is finished and doesn't need additional work.\n */\nconst Input = (props) => (\n    <Field name={props.name}>{rProps => (\n        <bs.Form.Group>\n            {props.title &&\n                <bs.Form.Label>{props.title}</bs.Form.Label>\n            }\n            <bs.Form.Control\n                type={props.type}\n                placeholder={props.placeholder}\n                disabled={props.disabled}\n                {...rProps.field}\n            />\n            {rProps.meta.touched && rProps.meta.error &&\n                <div className=\"text-danger\">{rProps.meta.error}</div>\n            }\n        </bs.Form.Group>\n    )}</Field>\n)\n\nconst GreaterThan = (props) => (\n    <Field name={props.name}>{rProps => (\n        <bs.Form.Group>\n            {props.title &&\n                <bs.Form.Label>{props.title} (Less than <MyCheckbox name={props.name + '_less_than'} />) </bs.Form.Label>\n            }\n            <bs.Form.Control\n                type={props.type}\n                placeholder={props.placeholder}\n                disabled={props.disabled}\n                {...rProps.field}\n            />\n            {rProps.meta.touched && rProps.meta.error &&\n                <div className=\"text-danger\">{rProps.meta.error}</div>\n            }\n        </bs.Form.Group>\n    )}</Field>\n)\n\nconst MyCheckbox = ({ children, ...props }) => {\n    // We need to tell useField what type of input this is\n    // since React treats radios and checkboxes differently\n    // than inputs/select/textarea.\n    const [field, meta] = useField({ ...props, type: 'checkbox' });\n    return (\n      <>\n        <label className=\"checkbox\">\n          <input type=\"checkbox\" {...field} {...props} />\n          {children}\n        </label>\n        {meta.touched && meta.error ? (\n          <div className=\"error\">{meta.error}</div>\n        ) : null}\n      </>\n    );\n  };\n\n// import React from 'react'\n// import * as bs from 'react-bootstrap'\n","import React from 'react'\nimport * as bs from 'react-bootstrap'\nimport { Formik, Form, Field, useField} from 'formik'\nimport AppContext from './context'\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\nimport SearchResults from './searchResults'\n\nfunction PredicitonCalc(props) {\n    return (\n        <bs.Container>\n            <SearchController />\n        </bs.Container>\n    )\n}\nexport default PredicitonCalc\n\nconst SearchController = props => {\n    const context = React.useContext(AppContext)\n    const history = useHistory()    \n\n    return (\n        <Formik\n            initialValues={{\n                campaign_id: '',\n                goal: 0,\n                title: '',\n                description: '',\n                has_benificiary: false,\n                visable_in_search: false,\n                is_charity: false,\n                charity_npo_id: '',\n                description_Language: '',\n            }}\n            validateOnChange={false}\n            validateOnBlur={false}\n            validate={values => {\n                const errors = {}\n                //console.log('validating', values)\n                if (!values.goal){\n                    errors.goal = \"Please enter your campaign goal\"\n                }\n                if (!values.title){\n                    errors.title = \"Please enter your campaign title\"\n                }\n                if (!values.description){\n                    errors.description = \"Please enter your campaign description\"\n                }\n                if (values.description_language ===\"Select\"){\n                    errors.description_language = \"Please select a language\"\n                }\n                return errors\n            }}\n            onSubmit={async (values, actions) => {\n                console.log('submit', values)\n                const resp = await axios.get('http://ec2-52-201-219-100.compute-1.amazonaws.com/api/predictionCalculator/', {\n                    params: {\n                        goal: values.goal,\n                        title: values.title,\n                        description: values.description,\n                        has_benificiary: values.has_benificiary,\n                        visable_in_search: values.visable_in_search,\n                        is_individual: values.is_individual,\n                        is_charity: values.is_charity,\n                        charity_npo_id: values.charity_npo_id,\n                        description_language: values.description_language\n                    }                    \n                })\n                console.log(resp.data)\n                history.push({\n                    pathname: \"/predictionResults\",\n                    search: \"\",\n                    state: {detail: resp.data}\n                })\n                return (<SearchResults values={values} actions={actions}/>)\n            }}\n        >{form => (\n            <CalcForm form={form}/>\n        )}</Formik>\n    )\n}\n\nconst CalcForm = props => (\n    <Form disabled={props.form.isSubmitting}>\n      <h1 style={{textAlign: 'center'}}>Welcome to the Prediction Calculator</h1><br />\n      <h3>Please enter the following information to calculate your...</h3>\n      <bs.Row>\n          <bs.Col>\n\n          </bs.Col>\n          <bs.Col>\n              <Input disabled={props.form.isSubmitting} title=\"Goal\" name=\"goal\" type=\"number\" />\n              <Input disabled={props.form.isSubmitting} title=\"Title\" name=\"title\" type=\"text\" />\n              <Input disabled={props.form.isSubmitting} title=\"Description\" name=\"description\" type=\"text\" />\n              Has beneficiary\n              <MyCheckbox disabled={props.form.isSubmitting} title=\"Has Beneficiary\" name=\"has_beneficiary\" /><br></br>\n                Visible in search\n                <MyCheckbox disabled={props.form.isSubmitting} title=\"Visible In Search\" name=\"visible_in_search\" /><br></br>\n                Is an individual\n                <MyCheckbox disabled={props.form.isSubmitting} title=\"Is individual\" name=\"is_individual\" /><br></br>\n                For a charity\n                <MyCheckbox disabled={props.form.isSubmitting} title=\"is charity\" name=\"is_charity\" /><br></br>\n              <Input disabled={props.form.isSubmitting} title=\"NPO ID (if for a charity)\" name=\"charity_npo_id\" type=\"text\" />\n              {/* <Input disabled={props.form.isSubmitting} title=\"Description Language\" name=\"description_language\" type=\"text\" /> */}\n              <p>Select Language</p>\n              <Field\n                name=\"description_language\" \n                component=\"select\" \n                placeholder=\"Your language\"> \n                    <option value=\"Select\">Select</option>\n                    <option value=\"English\">English</option>\n                    <option value=\"Spanish\">Spanish</option>\n                    <option value=\"Italian\">Italian</option>\n                    <option value=\"German\">German</option>\n                    <option value=\"Dutch\">Dutch</option>\n                    <option value=\"French\">French</option>\n                </Field><br /><br />\n              <bs.Button\n                          variant=\"success\"\n                          type=\"submit\"\n                          className=\"d-inline-flex align-items-center\"\n                          disabled={props.form.isSubmitting}\n                      >\n                          {props.form.isSubmitting &&\n                              <bs.Spinner className=\"mr-2\" size=\"sm\" animation=\"border\" />\n                          }\n                          Search\n                </bs.Button>\n          </bs.Col>\n          <bs.Col>\n\n          </bs.Col>\n      </bs.Row>\n  </Form>  \n)\n\n\n/**\n* A form input.\n*   props.title - the title that shows above the input box\n*   props.type - the type of input (see React Bootstrap Form.Control)\n*   props.placeholder - placeholder text in the input.\n* This component is finished and doesn't need additional work.\n*/\nconst Input = (props) => (\n  <Field name={props.name}>{rProps => (\n      <bs.Form.Group>\n          {props.title &&\n              <bs.Form.Label>{props.title}</bs.Form.Label>\n          }\n          <bs.Form.Control\n              type={props.type}\n              placeholder={props.placeholder}\n              disabled={props.disabled}\n              {...rProps.field}\n          />\n          {rProps.meta.touched && rProps.meta.error &&\n              <div className=\"text-danger\">{rProps.meta.error}</div>\n          }\n      </bs.Form.Group>\n  )}</Field>\n)\n\nconst MyCheckbox = ({ children, ...props }) => {\n    // We need to tell useField what type of input this is\n    // since React treats radios and checkboxes differently\n    // than inputs/select/textarea.\n    const [field, meta] = useField({ ...props, type: 'checkbox' });\n    return (\n      <>\n        <label className=\"checkbox\">\n          <input type=\"checkbox\" {...field} {...props} />\n          {children}\n        </label>\n        {meta.touched && meta.error ? (\n          <div className=\"error\">{meta.error}</div>\n        ) : null}\n      </>\n    );\n  };\n","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { useEffect } from 'react'\r\nimport CampaignCard from './campaignCard'\r\n\r\nconst NUM_COLUMNS = 4\r\n\r\nfunction SearchResults(props) {\r\n    return (\r\n        <bs.Container>\r\n            <SearchController />\r\n        </bs.Container>\r\n    )\r\n}\r\nexport default SearchResults\r\n\r\n\r\nconst SearchController = props => {\r\n    const location = useLocation();\r\n\r\n    var results = []\r\n\r\n    useEffect(() => {\r\n        console.log(location.state.detail)\r\n        results = location.state.detail;        \r\n    })\r\n\r\n    results = (location.state.detail)\r\n\r\n    // What do they want to sort by?\r\n    var sortBy = location.state.sortBy;\r\n\r\n    if (sortBy == 'avg_donation_per_donor') {\r\n        results.sort((a, b) => (parseFloat(a.avg_donation_per_donor) < parseFloat(b.avg_donation_per_donor)) ? 1 : -1 )\r\n    } else if (sortBy === 'percent_goal_complete') {\r\n        results.sort((a, b) => (parseFloat(a.percent_goal_complete) < parseFloat(b.percent_goal_complete)) ? 1 : -1 )\r\n    } else if (sortBy === 'campaign_hearts') {\r\n        results.sort((a, b) => (parseFloat(a.campaign_hearts) < parseFloat(b.campaign_hearts)) ? 1 : -1 )\r\n    } else if (sortBy === 'social_share_total') {\r\n        results.sort((a, b) => (parseFloat(a.social_share_total) < parseFloat(b.social_share_total)) ? 1 : -1 )\r\n    } else if (sortBy === 'overall_popularity') {\r\n        results.sort((a, b) => (parseFloat(a.overall_popularity) < parseFloat(b.overall_popularity)) ? 1 : -1 )\r\n    } else {\r\n        results.sort((a, b) => (parseFloat(a.current_amount) < parseFloat(b.current_amount)) ? 1 : -1 )\r\n    }\r\n    \r\n    // slice the products into an array of arrays (e.g. a list of rows of 4 products each)\r\n    const rows = []\r\n    for (let i = 0; i < results.length; i += NUM_COLUMNS) {\r\n        rows.push(results.slice(i, i + NUM_COLUMNS))\r\n    }\r\n\r\n    return (\r\n        rows.map((row, row_idx) => (\r\n            <bs.Row key={row_idx}>\r\n                {row.map(campaign => (\r\n                    <bs.Col md=\"3\" key={campaign.campaign_id}>\r\n                        <CampaignCard campaign={campaign} sortBy={sortBy}/>\r\n                    </bs.Col>\r\n                ))}\r\n            </bs.Row>\r\n        ))    \r\n    )\r\n}","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport AppContext from './context'\r\n\r\nfunction CampaignDetails(props) {\r\n    const context = React.useContext(AppContext)\r\n    let { id } = useParams()\r\n    let myCamp = {}\r\n    let isFound = false\r\n\r\n    let campaignsArray = Object.values(context.campaigns)\r\n\r\n    console.log(campaignsArray)\r\n\r\n    for (var itemInner of campaignsArray) {\r\n        if (itemInner.campaign_id === id) {\r\n            myCamp = itemInner\r\n            isFound = true\r\n        }\r\n    }\r\n\r\n\r\n    if (isFound === false){\r\n        return(<h1>Not Found</h1>)\r\n    }\r\n    \r\n\r\n    return(\r\n        <div>\r\n            <h1>{myCamp['title']}</h1>\r\n            <img src={myCamp['campaign_image_url']} alt=''></img>\r\n            <p>Name: {myCamp['user_first_name']} {myCamp['user_last_name']}</p>\r\n            <p>URL: <a href={myCamp['url']}>{myCamp['url']}</a></p>\r\n            <p>Current Amount: {myCamp['current_amount']}</p>\r\n            <p>Goal: {myCamp['goal']}</p>\r\n            <p>Percent Complete: {myCamp['percent_goal_complete']}</p>\r\n            <p>Number of Donors: {myCamp['donators']}</p>\r\n            <p>Average Donation per Doner: {myCamp['avg_donation_per_doner']}</p>\r\n            <p>Creation Date: {myCamp['created_at']}</p>\r\n            <p>Launch Date: {myCamp['launch_date']}</p>\r\n            <p>Days Active: {myCamp['days_active']}</p>\r\n            <p>Days Since Creation: {myCamp['days_created']}</p>\r\n            <p>Description: {myCamp['description']}</p>\r\n            <p>Number of Campaign Hearts {myCamp['campaign_hearts']}</p>\r\n            <p>Total Number of Shares on Social Media: {myCamp['social_share_total']} (Last updated: {myCamp['social_share_last_update']})</p>\r\n            <p>Overall Popularity: {myCamp['overall_popularity']}</p>\r\n            <p>City: {myCamp['location_city']}</p>\r\n            <p>Country: {myCamp['location_country']}</p>\r\n            <p>Zip Code: {myCamp['location_zip']}</p>\r\n            <p>Is this a charity?: {myCamp['is_charity']}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default CampaignDetails","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport AppContext from './context'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { useEffect } from 'react'\r\nimport CampaignCard from './campaignCard'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst NUM_COLUMNS = 4\r\n\r\nfunction SearchResults(props) {\r\n    return (\r\n        <bs.Container>\r\n            <SearchController />\r\n        </bs.Container>\r\n    )\r\n}\r\nexport default SearchResults\r\n\r\n\r\nconst SearchController = props => {\r\n    const context = React.useContext(AppContext)\r\n    const location = useLocation();\r\n\r\n    let campaignsArray = Object.values(context.campaigns)\r\n\r\n    var results = []\r\n\r\n    useEffect(() => {\r\n        console.log(location.state.detail)\r\n        results = location.state.detail;        \r\n    })\r\n\r\n    // Get the search results from the api\r\n    var apiResults = (location.state.detail)\r\n\r\n    return (\r\n        <div>\r\n            We predict that you will raise ${apiResults[0]}<br></br><br></br>\r\n            This is {apiResults[1]}% of your goal.\r\n        </div>        \r\n    )\r\n}","import React from 'react'\nimport * as bs from 'react-bootstrap'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport HeaderContainer from './header-container'\nimport LeftContainer from './left-container'\nimport RightContainer from './right-container'\nimport FooterContainer from './footer-container'\nimport Home from './home'\nimport Search from './search'\nimport PredictionCalc from './calc'\nimport './App.scss'\nimport SearchResults from './searchResults'\nimport SortBy from './sortBy'\nimport CampaignDetails from './campaignDetails'\nimport PredictionResults from './predictionResults'\n\nfunction App(props) {\n    return (\n        <Router>\n            <bs.Container fluid className=\"p-0 min-vh-100 d-flex flex-column\">\n                <bs.Row noGutters className=\"flex-grow-0 flex-shrink-0 border-bottom shadow-sm\">\n                    <bs.Col className=\"px-3 py-2\">\n                        <HeaderContainer />\n                    </bs.Col>\n                </bs.Row>\n                <bs.Row noGutters className=\"flex-grow-1\">\n                    <bs.Col md=\"2\" className=\"px-3 py-4 border-right\">\n                        <LeftContainer />\n                    </bs.Col>\n                    <bs.Col md=\"8\">\n                        <Switch>\n                            <Route path=\"/search\">\n                                <Search />\n                            </Route>\n                            <Route path=\"/calc\">\n                                <PredictionCalc />\n                            </Route>\n                            <Route path=\"/searchResults\">\n                                <SearchResults />\n                            </Route>\n                            <Route path=\"/campaigns/:id\">\n                                <CampaignDetails />\n                            </Route>\n                            <Route path=\"/sortBy\">\n                                <SortBy />\n                            </Route>\n                            <Route path=\"/predictionResults\">\n                                <PredictionResults />\n                            </Route>\n                            <Route path=\"/\">\n                                <Home />\n                            </Route>\n                        </Switch>\n                    </bs.Col>\n                    <bs.Col md=\"2\" className=\"px-3 py-4 border-left\">\n                        <RightContainer />\n                    </bs.Col>\n                </bs.Row>\n                <bs.Row noGutters className=\"flex-grow-0 flex-shrink-0\">\n                    <bs.Col className=\"px-3 py-2\">\n                        <FooterContainer />\n                    </bs.Col>\n                </bs.Row>\n            </bs.Container>\n        </Router>\n    )\n}\nexport default App\n","import React from 'react'\nimport axios from 'axios'\nimport AppContext from './context'\nimport App from './App'\n\n/** The context provider for our app */\nexport default class AppProvider extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.actions = {\n            addToCart: this.addToCart,\n            removeFromCart: this.removeFromCart,\n            clearCart: this.clearCart,\n            getCartTotal: this.getCartTotal,\n        }\n        this.state = {\n            campaigns: {},\n        }\n\n    }\n\n    render() {\n        return (\n            <AppContext.Provider value={{...this.state, ...this.actions}}>\n                <App />\n            </AppContext.Provider>\n        )\n    }\n\n    async componentDidMount() {\n        // load the campaigns\n        const resp = await axios.get('http://ec2-52-201-219-100.compute-1.amazonaws.com/api/campaign/')\n        const campaigns = {}\n        for (const item of resp.data) {\n            campaigns[item.campaign_id] = item\n        }\n\n        // set in state\n        this.setState({\n            campaigns: campaigns\n        })\n    }\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport AppProvider from './context-provider';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppProvider />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}